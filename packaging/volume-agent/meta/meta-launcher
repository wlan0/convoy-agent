#!/bin/bash
# This should run in a container that is privileged, and has --pid host and has docker sock bind mounted in

MNT_BASE_PATH="/var/lib/rancher/mounts"

set -o
set -x
set -o verbose
set -v

get_metadata() {
	echo $(curl -s http://rancher-metadata/latest/services/convoy/metadata/$1)
}

curl -H 'Accept: application/json' http://rancher-metadata/latest

MNT_HOST=$(get_metadata mount_host)
MNT_PATH=$(get_metadata mount_path)
MNT_OPTS=$(get_metadata mount_opts)

MNT_PT=$MNT_BASE_PATH/$MNT_HOST/$MNT_PATH

HOST_UUID=$(curl -s http://rancher-metadata/latest/self/host/uuid)

CONVOY_DIR=/var/run/convoy
CONVOY_SOCK=$CONVOY_DIR/convoy.sock

DOCKER_PLUGIN_PATH=/etc/docker/plugins

nsenter --target 1 --mount /bin/bash -c "\
	apt-get install -y nfs-common && \
	mkdir -p /etc/docker/plugins/ && \
	rpc.statd && \
	rm -rf $CONVOY_DIR && \
	mkdir -p $MNT_PT && \
	mkdir -p $CONVOY_DIR && \
	mountpoint -q $MNT_PT || mount -t nfs $MNT_OPTS $MNT_HOST:$MNT_PATH $MNT_PT && \
	docker run \
	-v $DOCKER_PLUGIN_PATH:$DOCKER_PLUGIN_PATH \
	-v $CONVOY_DIR:$CONVOY_DIR \
	-v $MNT_PT:$MNT_PT \
	-e CONVOY_SOCK=$CONVOY_SOCK \
	-e MNT_PT=$MNT_PT \
	-e HOST_UUID=$HOST_UUID \
	-e CATTLE_URL=$CATTLE_URL \
	-e CATTLE_ACCESS_KEY=$CATTLE_ACCESS_KEY \
	-e CATTLE_SECRET_KEY=$CATTLE_SECRET_KEY \
	-l io.rancher.container.network=true \
	wlan0/convoy" 
